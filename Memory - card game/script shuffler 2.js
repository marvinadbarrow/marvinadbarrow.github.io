
  
  
  // hopefully this will lay the table... 


//BELOW is for the function for appearing points
let pointsAppear = 0
let pointsEl = document.getElementById('dialogue-el')
var timer3;
timer3 = setInterval(points, 1000)
function points(){
    
    pointsAppear++;
    
    if (pointsAppear ===1){clearPoints()}
    else{pointsEl.style.opacity = pointsAppear; }}


function clearPoints(){

    clearInterval(timer3)
    
}

    


//ABOVE is for the function for appearing points 

// For the randomly generated card, using its index value, we select the associated indexed image in this array; the image displays when the card is clicked. 
let cardSelect = [ 
"1.png","2.png","3.png","4.png",
"5.png","6.png","7.png","8.png",
"9.png","10.png","11.png","12.png",
"13.png","14.png","15.png","16.png",
"17.png","18.png","19.png","20.png",
"21.png","22.png","23.png","24.png",
"25.png","26.png","27.png","28.png",
"29.png","30.png","31.png","32.png",
"33.png","34.png","35.png","36.png",
"37.png","38.png","39.png","40.png",
"41.png","42.png","43.png","44.png",
"45.png","46.png","47.png","48.png",
"49.png","50.png","51.png","52.png",]
let testEl = 2
let placedCardsArray = []
// sound to play when pair found
var audio3 = new Audio("twentyonewait.mp3")
// sound for card flip
var audio4 = new Audio("cardflip.mp3")
// sound for shuffle 
var audio5 = new Audio("shuffle clip.mp3")
let audio6 = new Audio("silence.mp3")
let audio7 = new Audio("you lose.mp3")
let audio8 = new Audio("boopstart.mp3")
let flipArray = [] // will enter pairs of cards here and compare
var pair1; 
var pair2; 
let cardsPaired = []
let tableArrayIndex = []// using this to turn the picked cards back to integer numbers
let cardSuitsArray = ["clubs","diamonds","hearts","spades"]; // for available suits
let cardNumbersArray = [1,2,3,4,5,6,7,8,9,10,11,12,13]; // for available card values
let randomSuitNum = "";// variable for generated suit index
let randomSuit = "";// variable for suit name
let randomCardNum = "";// variable for generated number
let chosenCard = "" // variable for generated number and suit combined - picked card
let tableArray = []; // cards dealt to table
//let displayEl = document.getElementById('display');// picked card display
let pairsArray = [] // this array collects all found pairs
// function for card generation






// SCORES VARIABLES
let infoEl = document.getElementById("dialogue-el")
var sumbAll; // sum of scores in the array
let totalScoreArray = []
let scoreEl = document.getElementById("score")
let totalScoreEl = document.getElementById("total-scores")
let scores = 0; // scores for pairs found




// TIMER FUNCTION VARIABLES

let minuteEl = document.getElementById("minute-el");
let secondEl = document.getElementById("second-el");
minuteEl.textContent = "05";
secondEl.textContent = "00";
var secondInSeconds;
var minuteInSeconds;
var setTime;
let timer = 300;

// TIMER FUNCTION
function CountDownTimer(){
  
   
       setTime = setInterval(function() {
           timer--;
           secondInSeconds  = timer - Math.floor(timer/60)*60
           minuteInSeconds = Math.floor(timer/60)
           secondEl.textContent = secondInSeconds
           minuteEl.textContent = minuteInSeconds
      if (minuteInSeconds < 10){minuteEl.textContent = "0" + minuteInSeconds}  
             
      if (secondInSeconds < 10){secondEl.textContent = "0" + secondInSeconds}  

   

 

    if(pairsArray.length < 52 && timer === 0){clearInterval(setTime); scoreEl.textContent = "Game Over"; scoreEl.style.opacity === 1;
    minuteEl.textContent = "05";
    secondEl.textContent = "00";}
   
       }, 1000);}






// ABOVE IS THE TIMER FUNCTION... LET'S HOPE IT WORKS


// console logging for tests
function consoleLog(){ 
    console.log(paraNum)
    console.log(scores + 15)
 }

function pickCard(){
    totalScoreArray.length = 0;
   if(tableArray.length < 52){ audio8.play();
randomSuitNum = Math.floor(Math.random()*cardSuitsArray.length)//suit generated by index
randomCardNum = Math.ceil(Math.random()*cardNumbersArray.length) // card value generated
randomSuit = cardSuitsArray[randomSuitNum]// suit name picked from randomly generated card suit index
chosenCard = randomCardNum + randomSuit // variable for value and suit of card
let  actualCard = randomSuitNum + 1 + (4*(randomCardNum - 1)) //this turns the named cards into numbers from 1-52, which will be useful for picking out the card images

// condition to prevent duplicate card generation; if duplicate generated, re-run pickCard()
if(tableArray.includes(chosenCard)){pickCard();} 
else{
tableArrayIndex.push(actualCard)
tableArray.push(chosenCard) // card pushed to table

if (tableArray.length > 51){console.log(tableArray); CountDownTimer()} 
}
}
shuffleCards()

}

// this logs the array of distributed} cards (by name) and also the index number associated with each card.   
//function logArray(){if(flipArray.length <= 2)
//if (tableArrayIndex.length > 51){ playSound(); playSound();console.log(tableArrayIndex)}if(flipArray.length <= 2)
// if (tableArray.length > 51){ playSound(); playSound();console.log(tableArray)}}

//repeats pick card (random numbers) and distribute - i.e. SHUFFLE
function shuffleCards(){
if (tableArray.length < 52){ pickCard(); 
   
        // this stops the played card from activating a second time if the game hasn't started yet and you accidentally press the button
      audio5.play();
     
      // assigns a single variable to all elements the specified class
    let imgsEl = document.getElementsByClassName('cards-all')
  
    // formats all the elements into elements of an array
      var allCards = Array.from(imgsEl)
      
      // variable for starting point of count
      let cardStart = 0;
  
      // variable we assign the timer to
      var timer2
      
      timer2 = setInterval(revealCard, 15)
      function revealCard(){
          
  // this variable returns a nodelist from all elements of the class .cards-all (not sure about the card start attribute selector though)
          const cardsEl = document.querySelectorAll(".cards-all")[cardStart];
  
      cardsEl.classList.add('deal');
      
      // variable increments by 1 (from start)
      cardStart++;
      if (cardStart === allCards.length){
       completeDeal();
      cardStart = 0;}};
        
      function completeDeal(){
      clearInterval(timer2);
      //document.getElementById('start-el').style.opacity = 1; 
  
  
      // only when this array is empty can the lay card function run. It will empty on game reset, clear cards and gameover, or you win. 
  placedCardsArray.push(testEl)
  
      }}
  } 




// clearing the tableArray so we can use the shuffle again
function resetGame(){
   
   if (flipArray.length > 0){
        placedCardsArray.pop()
    
    clearInterval(setTime);
    document.getElementById('start-el').style.zIndex = 0;
    document.getElementById('start-el').style.opacity = 100;
 


  let clearPairEl = document.getElementById("card-pairs-array")
   clearPairEl.textContent = ""

    tableArray.length = 0;
    tableArrayIndex.length = 0;
    flipArray.length = 0;
    pairsArray.length = 0;
   
    // below clears the display of paired cards and returns cards 'upsidedown' to original positions - awaiting shuffle and number allocation
    let imgsEl = document.getElementsByClassName('cards-all')
    for (var i = 0; i < imgsEl.length; i++){imgsEl[i].src = "card back red.jpg"; imgsEl[i].style.opacity = 100;}
 
}}




/*
EXPERIMENTING TO ENSURE THAT NO MORE THAN 2 CARDS CAN BE REVEALED AT THE SAME TIME - AND THAT CARDS CAN BE TURNED BACK OVER IF PICKING TWO CARDS DOES NOT RESULT IN A MATCHED PAIR. 
var numEl;
if (numEl = tableArrayIndex[0]){tableArrayIndex.pop(numEl); console.log(flipArray); card#.src = card back red.jpg)} else{
 numEl = tableArrayIndex[0]
card1.src = cardSelect[numEl - 1] }
if ( flipArray.length < 3 && tableArrayIndex.length > 51 ){flipArray.push(numEl)}
*/

// firstt row of cards - row 1
function playSound(){

    audio4.play()
}

function refreshAll(){
// not using at the moment
    location.reload();
}

function pairFound(){

    
    // this hides the 'immediate' points once a card is pressed after it appeared due to a pair being found. This is because pairFound() runs if the flipArray.length is < 2 and a card is clicked. 
    document.getElementById("dialogue-el").style.opacity = 0
if (flipArray.length > 1){
    
    pair1 = Math.ceil(flipArray[0]/4)
    pair2 = Math.ceil(flipArray[1]/4)
    //console.log(pair1)
    //console.log(pair2)
    // these return the index of the picked cards (where they lie in the tablearray index). In other words, it looks at the integer value of the flipArray card, then finds the corresponding index position in the tableArrayIndex. And we give that a variable called index1 or index1.  These integer numbers are used to pick out the correct images from the cardSelect array when the associated cards derived by dividing flipArray values match. 
    let index1 = tableArrayIndex.indexOf(flipArray[0])
   // console.log(index1)
    let index2 = tableArrayIndex.indexOf(flipArray[1])
    //console.log(index2)
    let imgsEl = document.getElementsByClassName('cards-all')
    // at last, got it. the below two functions (imgsEl[index1] etc, ) uses the indexes arrived above from the indeOf method and uses them in the HTML kind of array to change the style of the cards which have the same position as the index number we got from the table array - now we can just put it into the condition for finding pairs and make them disappear if a pair is found
   
    if (pair1 === pair2){console.log("pair found"); audio3.play();
    // once a pair is found the points() function allocates points based on how much time has elapsed since the beginning of the game. 
    points()

     pairsArray.push(flipArray[0],flipArray[1]);
    imgsEl[index1].style.opacity = 0;
    imgsEl[index2].style.opacity = 0;
    flipArray.length = 0;
    
    // attempt to push images to div of paired cards

    var img2=document.createElement("img");
    img2.src= cardSelect[tableArrayIndex[index1] -1]; // image source using card image array
    var block = document.getElementById("card-pairs-array"); // setting the div as a variable
    block.appendChild(img2); // append the image to the div
    img2.style.width = "55px"; // set width of image
    img2.style.height = "80px"; // set height of image


    console.log(tableArrayIndex[index1] -1) // checking the index number matches the paired card 1 so correct card is picked
    console.log(tableArrayIndex[index2] -1) // checking the index number matches the paired card 2 so correct card is picked
    


    var img=document.createElement("img");
    img.src= cardSelect[tableArrayIndex[index2] -1];
    var block = document.getElementById("card-pairs-array");
    block.appendChild(img);
    img.style.width = "55px";
    img.style.height = "80px";

 // points system... 
   if (minuteInSeconds >= 4 ){scores = 30}
   else if (minuteInSeconds >= 3){scores = 20}
   else if   (minuteInSeconds >= 2){scores = 15}
   else {scores = 10}
   totalScoreArray.push(scores)
   console.log(totalScoreArray)
   scoreEl.textContent = scores + "!";
 
  sumbAll =  totalScoreArray.reduce((partialSum, a) => partialSum + a, 0);

  totalScoreEl.textContent = "Score: " + " " + sumbAll ;
console.log(pairsArray);
if (pairsArray.length > 51){scoreEl.textContent = "COMPLETE"; scoreEl.style.opacity = 1; scoreEl.style.fontSize = "50px"; clearInterval(setTime); timer === 0; //resetGame();

if (pairsArray.length> 51 && minuteInSeconds > 3){clearInterval(setTime); scores = 300;totalScoreArray.push(scores);
    minuteEl.textContent = "05";
    secondEl.textContent = "00";}
  else if (pairsArray.length> 51 && minuteInSeconds > 2){clearInterval(setTime); scores = 250;totalScoreArray.push(scores);
    minuteEl.textContent = "05";
    secondEl.textContent = "00";}
  else if (pairsArray.length> 51 && minuteInSeconds > 1){clearInterval(setTime); scores = 150;totalScoreArray.push(scores);
    minuteEl.textContent = "05";
    secondEl.textContent = "00";}


}

}}}




 // BELOW ARE THE FUNCTIONS FOR EACH OF THE 52 CARDS

/*

function revealOne(){
    if(tableArray.length > 51 ){
let numElOne = tableArrayIndex[0];

 // COPY THE BELOW to other functions and adjust as needed
if(flipArray.includes(numElOne) && numElOne === flipArray[0]){ flipArray.shift(); document.getElementById("card1").src="card back red.jpg"; playSound();} 
 else if(flipArray.includes(numElOne) && numElOne === flipArray[1]){ flipArray.pop();  document.getElementById("card1").src="card back red.jpg"; playSound();}
 else{revealCard()}
// COPY THE ABOVE function and adjust as needed

function revealCard(){
if (flipArray.length < 2 && !pairsArray.includes(numElOne) ){flipArray.push(numElOne); card1.src = cardSelect[numElOne - 1]; playSound();}
//console.log(flipArray);
 pairFound(); 
 }}}
   
*/

// wow... well it actually works.. 
/*
function flipCard(valX,valY){
    if(tableArray.length > 51 ){
     if (flipArray.includes(valX)){
    if(valX === flipArray[0]){ flipArray.shift();} 
     else if(valX === flipArray[1]){ flipArray.pop();}
     valY.src ="card back red.jpg"; playSound();}
     else{if (flipArray.length < 2 && !pairsArray.includes(valX) ){flipArray.push(valX); valY.src = cardSelect[valX - 1]; playSound();}
     if (flipArray.length === 2){pairFound()}; 
     }}}
    */
var x;
var y;


// let's rewrite this function - it actually works but I don't know it's any simpler. 


const flipCard = (valX,valY) => {

    if (!pairsArray.includes(valX)){
switch(valX){
        case flipArray[0]: flipArray.shift();
    valY.src ="card back red.jpg"; playSound();
break;
    case flipArray[1]: flipArray.pop();
    valY.src ="card back red.jpg"; playSound();
break;

default: // if valX isn't in flipArray - and fliparray isn't full
switch(flipArray.length){
case 0:
case 1:
    flipArray.push(valX); valY.src = cardSelect[valX - 1]; playSound(); if (flipArray.length === 2){pairFound()}      
   
}}}}



function revealOne(){
x = tableArrayIndex[0];
y = document.getElementById("card1")
flipCard(x,y);}


function revealTwo(){
x = tableArrayIndex[1]
y = document.getElementById("card2")
flipCard(x,y);}


function revealThree(){  
x = tableArrayIndex[2]
y = document.getElementById("card3")
flipCard(x,y);}


function revealFour(){
x = tableArrayIndex[3]
y = document.getElementById("card4")
flipCard(x,y);}


 function revealFive(){
x = tableArrayIndex[4]
y = document.getElementById("card5")
flipCard(x,y);}


 function revealSix(){
x = tableArrayIndex[5]
y = document.getElementById("card6")
flipCard(x,y);}


 function revealSeven(){
x = tableArrayIndex[6]
y = document.getElementById("card7")
flipCard(x,y);}


 function revealEight(){
x = tableArrayIndex[7]
y = document.getElementById("card8")
flipCard(x,y);}


 function revealNine(){
x = tableArrayIndex[8]
y = document.getElementById("card9")
flipCard(x,y);}


 function revealTen(){
 x = tableArrayIndex[9]
 y = document.getElementById("card10")
 flipCard(x,y);}


function revealEleven(){
x= tableArrayIndex[10]
y = document.getElementById("card11")
flipCard(x,y);}



 function revealTwelve(){
x= tableArrayIndex[11]
y = document.getElementById("card12")
flipCard(x,y);}


 function revealThirteen(){
x= tableArrayIndex[12]
y = document.getElementById("card13")
flipCard(x,y);}


// next row of cards - row 2

function revealFourteen(){
x = tableArrayIndex[13];
y = document.getElementById("card14")
flipCard(x,y);}

   



function revealFifteen(){
x = tableArrayIndex[14]
y = document.getElementById("card15")
flipCard(x,y);}





function revealSixteen(){
x = tableArrayIndex[15]
y = document.getElementById("card16")
flipCard(x,y);}
    


function revealSevenTeen(){
x = tableArrayIndex[16]
y = document.getElementById("card17")
flipCard(x,y);}



 function revealEighteen(){
x = tableArrayIndex[17]
y = document.getElementById("card18")
flipCard(x,y);}



 function revealNineteen(){
x = tableArrayIndex[18]
y = document.getElementById("card19")
flipCard(x,y);}




 function revealTwenty(){
x = tableArrayIndex[19]
y = document.getElementById("card20")
flipCard(x,y);}



 function revealTwentyOne(){
x = tableArrayIndex[20]
y = document.getElementById("card21")
flipCard(x,y);}




 function revealTwentyTwo(){
x = tableArrayIndex[21]
y = document.getElementById("card22")
flipCard(x,y);}



 function revealTwentyThree(){
x = tableArrayIndex[22]
y = document.getElementById("card23")
flipCard(x,y);}



 function revealTwentyFour(){
x = tableArrayIndex[23]
y = document.getElementById("card24")
flipCard(x,y);}



 function revealTwentyFive(){
x = tableArrayIndex[24]
y = document.getElementById("card25")
flipCard(x,y);}



 function revealTwentySix(){
x = tableArrayIndex[25]
y = document.getElementById("card26")
flipCard(x,y);}


// next row of cards - row 3



function revealTwentySeven(){
x = tableArrayIndex[26];
y = document.getElementById("card27")
flipCard(x,y);}
   



function revealTwentyEight(){
    x = tableArrayIndex[27]
    y = document.getElementById("card28")
    flipCard(x,y);}




function revealTwentyNine(){
    x = tableArrayIndex[28]
  y = document.getElementById("card29") 
  flipCard(x,y);}




function revealThirty(){
x = tableArrayIndex[29]
y =  document.getElementById("card30")
flipCard(x,y);}




 function revealThirtyOne(){
x = tableArrayIndex[30]
y =  document.getElementById("card31")
flipCard(x,y);}




 function revealThirtyTwo(){
   x = tableArrayIndex[31]
y = document.getElementById("card32")
flipCard(x,y);}



 function revealThirtyThree(){
x = tableArrayIndex[32]
y =  document.getElementById("card33")
flipCard(x,y);}




 function revealThirtyFour(){
x = tableArrayIndex[33]
y = document.getElementById("card34")
flipCard(x,y);}




 function revealThirtyFive(){
x = tableArrayIndex[34]
y = document.getElementById("card35")
flipCard(x,y);}




 function revealThirtySix(){
    x = tableArrayIndex[35]
    y = document.getElementById("card36")
    flipCard(x,y);}




 function revealThirtySeven(){
    x = tableArrayIndex[36]
    y = document.getElementById("card37")
    flipCard(x,y);}




 function revealThirtyEight(){
    x = tableArrayIndex[37]
    y = document.getElementById("card38")
    flipCard(x,y);}




 function revealThirtyNine(){
    x = tableArrayIndex[38]
    y = document.getElementById("card39")
    flipCard(x,y);}


// next row of cards - row 4




function revealForty(){
    x = tableArrayIndex[39]
    y = document.getElementById("card40")
    flipCard(x,y);}

   



function revealFortyOne(){
    x = tableArrayIndex[40]
    y = document.getElementById("card41")
    flipCard(x,y);}




function revealFortyTwo(){
    x = tableArrayIndex[41]
    y = document.getElementById("card42")
    flipCard(x,y);}




function revealFortyThree(){
    x = tableArrayIndex[42]
    y = document.getElementById("card43")
    flipCard(x,y);}




 function revealFortyFour(){
    x = tableArrayIndex[43]
    y = document.getElementById("card44")
    flipCard(x,y);}




 function revealFortyFive(){
    x = tableArrayIndex[44]
    y = document.getElementById("card45")
    flipCard(x,y);}



 function revealFortySix(){
    x = tableArrayIndex[45]
    y = document.getElementById("card46")
    flipCard(x,y);}



 function revealFortySeven(){
    x = tableArrayIndex[46]
    y = document.getElementById("card47")
    flipCard(x,y);}



 function revealFortyEight(){
    x = tableArrayIndex[47]
    y = document.getElementById("card48")
    flipCard(x,y);}



 function revealFortyNine(){
    x = tableArrayIndex[48]
    y = document.getElementById("card49")
    flipCard(x,y);}



 function revealFifty(){
    x = tableArrayIndex[49]
    y = document.getElementById("card50")
    flipCard(x,y);}



 function revealFiftyOne(){
    x = tableArrayIndex[50]
    y = document.getElementById("card51")
    flipCard(x,y);}



 function revealFiftyTwo(){
    x = tableArrayIndex[51]
    y = document.getElementById("card52")
    flipCard(x,y);}
