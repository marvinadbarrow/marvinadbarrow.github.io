here are some notes on the already made functions



// notes on above function.... every time 'Enter' is pressed the input text gets appended as a list item, with an accompanying checkbox which has an id, a value (the name of the shopping item) and a name (which sort of gives the purpose of the value) and a label (which is the actual item to be purchased) --

// hopefully I can use the ticked checkbox to indicate that I have collected the item for purchase.  I can then send all ticked items to the basket for processing (or you can send them individually as you go); maybe in the 'checkout' page, that's where you can specify how much of each product is purchased, or you can put 'zero' if you retract an item. Also, when you get to the checkout page you might do an alert if there are any un-purchased items to double-check that you don't wish to purchase them.  Maybe have an ignore button, or go back to shopping basket for parchases; and then return to the checkout once those purchases are made.  On the same page you could have a purchase completed button for when you've bought everything.   You need to save the data so you have to find out how to do that, maybe you could email it, and save it json-ified to local storage, perhaps creating a new object out of thet shopping date.  - once home the saved data can be un-json-ified, displayed in a list of items of items to store, and perhaps  you can have a drop down field of all storage locations next to each item - pick the item and click store, then page refreshes and item disappears; ready for you to store the next item.  

// I think the label is actually a label for the checkbox - so it appears next to the checkbox that it is associated with; so you don't really need to specify the wording for the list item because it will appear in the label in a better position than list wording.  Also, put list-style-type:none; in CSS so the bullet points don't show when the list item is appended, so things look more presentable. 

maybe a better idea would be to store items returned from the input in an array, or store the items in a database, and then have a 'get shopping list' button which can then populate the unordered list with items and check boxes ready to be selected when you're actually shopping. 

You could also have a 'check shopping list button which will check the items before you leave home; you should also be able to add items to the list on the way or add them so they show up for the checkout later.

Process:

-add items
-submit items
-verify list (maybe send to email from here) or create a document with list to send for yourself.
-get list (when shopping)
-add items to basket (perhaps have the number of items on this page)
-proceed to checkout (if unchecked items remain, check if intentionally missed; forgotten)
-purchase items (maybe still have a check list if you wish to remove anything last minute)

Message - ITEMS PURCHASED and they can be stored for retrieval later

-get unstored purchases
-store purchases. 


---------------------------------------- SHOPPING CATEGORIES ----------------------------------

Yes specifies images collected

FISH
fish cakes - YES
crab sticks - YES


MEAT
quiche - meat - YES
pasta - meat - YES
bacon - YES


VEGETARIAN
quiche - vegetarian - YES
pasta - vegetarian - YES

DAIRY
milk - YES
cheese - YES

FRUIT & VEG 
carrots - YES
corn on tbe cob - YES
tomatoes - YES


BAKERY
bread - loaf - YES
bread - roll - YES

PASTRIES
cinnamon swirl - YES
maple pecan - YES


HOT DRINKS
coffee - YES
hot chocolate - YES
ovaltine - YES 
tea - YES


COLD DRINKS
coke classic
dr pepper - YES
cold latte/cappucino - YES

ALCOHOL
crabbies - strawberry - YES


TOILETRIES
deoderant - YES
air freshener - YES
hand wash - YES
toilet paper - YES
toothpaste - YES
toothbrush - YES
shower gel - YES


CLEANING PRODUCTS
bleach - YES
surface cleaner spray - YES
washing powder - YES
washing up liquid - YES


MISC
monkey nuts - YES
biscuits - YES
popcorn - YES
